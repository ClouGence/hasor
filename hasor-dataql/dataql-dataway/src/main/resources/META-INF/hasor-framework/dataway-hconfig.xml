<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.hasor.net/sechma/dataway">
    <hasor.environmentVar>
        <!-- 是否启用 Dataway 功能，默认不启用 -->
        <HASOR_DATAQL_DATAWAY>false</HASOR_DATAQL_DATAWAY>
        <!-- dataway  API工作路径 -->
        <HASOR_DATAQL_DATAWAY_API_URL>/api/</HASOR_DATAQL_DATAWAY_API_URL>
        <!-- 是否开启 dataway-ui 管理功能（注意生产环境要设置为 false） -->
        <HASOR_DATAQL_DATAWAY_ADMIN>false</HASOR_DATAQL_DATAWAY_ADMIN>
        <!-- dataway-ui 的工作路径，必须开启管理功能 -->
        <HASOR_DATAQL_DATAWAY_UI_URL>/interface-ui/</HASOR_DATAQL_DATAWAY_UI_URL>
        <!-- 元信息访问层默认使用的是哪种类型，提供者在 hasor.dataway.dataAccessLayer 中定义 -->
        <HASOR_DATAQL_DATAWAY_DAL_TYPE>db</HASOR_DATAQL_DATAWAY_DAL_TYPE>

        <!-- 当使用 db 作为 元信息存储器的时候的配置项目 -->
        <!--      指定数据库类型，一般情况下 Dataway 可以自动识别数据库类型。
                  如未能正确识数据库类型时，会引发 "dataway dbType unknown." 警告日志。
                  可以通过配置该选项来强制指定数据库类型，配置项值可以参考 JdbcUtils
        -->
        <HASOR_DATAQL_DATAWAY_DB_DBTYPE></HASOR_DATAQL_DATAWAY_DB_DBTYPE>
        <!-- DB 那两张表的前缀 -->
        <HASOR_DATAQL_DATAWAY_DB_TABLE_PREFIX></HASOR_DATAQL_DATAWAY_DB_TABLE_PREFIX>

        <!-- nacos 的服务地址 -->
        <HASOR_DATAQL_DATAWAY_NACOSDAL_ADDR></HASOR_DATAQL_DATAWAY_NACOSDAL_ADDR>
        <!-- nacos 上的 Namespace，默认为：public -->
        <HASOR_DATAQL_DATAWAY_NACOSDAL_NAMESPACE>public</HASOR_DATAQL_DATAWAY_NACOSDAL_NAMESPACE>
        <!-- 当使用 nacos 作为 元信息存储器的时候的配置项目 -->
        <HASOR_DATAQL_DATAWAY_NACOSDAL_GROUP>HASOR_DATAWAY</HASOR_DATAQL_DATAWAY_NACOSDAL_GROUP>
        <!-- Nacos 作为存储时，最大存储API条数，默认：4000 -->
        <HASOR_DATAQL_DATAWAY_NACOSDAL_API_MAX_SIZE>4000</HASOR_DATAQL_DATAWAY_NACOSDAL_API_MAX_SIZE>
    </hasor.environmentVar>

    <hasor>
        <loadPackages>net.hasor.dataway.*</loadPackages>
        <modules>
            <module>net.hasor.dataway.config.DatawayModule</module>
        </modules>

        <!-- enable：默认不启用Dataway，也不启用 Dataway 的管理能力 -->
        <dataway enable="${HASOR_DATAQL_DATAWAY}" enableAdmin="${HASOR_DATAQL_DATAWAY_ADMIN}">
            <!-- dataway  API工作路径 -->
            <baseApiUrl>${HASOR_DATAQL_DATAWAY_API_URL}</baseApiUrl>
            <!-- dataway-ui 的工作路径，必须开启管理功能 -->
            <baseAdminUrl>${HASOR_DATAQL_DATAWAY_UI_URL}</baseAdminUrl>

            <!-- 元信息访问层，dalType 元信息访问层默认使用的是哪种类型，提供者在 hasor.dataway.dataAccessLayer 中定义 -->
            <dataAccessLayer dalType="${HASOR_DATAQL_DATAWAY_DAL_TYPE}">
                <!-- 使用数据库充当 Dataway 的元信息存储器 -->
                <provider name="db">net.hasor.dataway.dal.providers.db.DataBaseApiDataAccessLayerCreator</provider>
                <!-- 使用 nacos 充当 Dataway 的元信息存储器（Nacos作为接口配置信息存储情况下不支持历史记录能力[历史数据会产生大量过期数据]） -->
                <provider name="nacos">net.hasor.dataway.dal.providers.nacos.NacosApiDataAccessLayerCreator</provider>
            </dataAccessLayer>

            <settings>
                <!-- 当使用 db 作为 元信息存储器的时候的配置项目 -->
                <!--      指定数据库类型，一般情况下 Dataway 可以自动识别数据库类型。
                          如未能正确识数据库类型时，会引发 "dataway dbType unknown." 警告日志。
                          可以通过配置该选项来强制指定数据库类型，配置项值可以参考 JdbcUtils
                -->
                <dal_db_type>${HASOR_DATAQL_DATAWAY_DB_DBTYPE}</dal_db_type>
                <!-- DB 那两张表的前缀 -->
                <dal_db_table_prefix>${HASOR_DATAQL_DATAWAY_DB_TABLE_PREFIX}</dal_db_table_prefix>


                <!-- 当使用 nacos 作为 元信息存储器的时候的配置项目 -->
                <dal_nacos_addr>${HASOR_DATAQL_DATAWAY_NACOSDAL_ADDR}</dal_nacos_addr>
                <!-- 当使用 nacos 作为 元信息存储器的时候的配置项目 -->
                <dal_nacos_namespace>${HASOR_DATAQL_DATAWAY_NACOSDAL_NAMESPACE}</dal_nacos_namespace>
                <!-- 当使用 nacos 作为 元信息存储器的时候的配置项目 -->
                <dal_nacos_group>${HASOR_DATAQL_DATAWAY_NACOSDAL_GROUP}</dal_nacos_group>
                <!-- Nacos 作为存储的话，最大存储API条数，默认：4000 -->
                <dal_nacos_api_max_size>${HASOR_DATAQL_DATAWAY_NACOSDAL_API_MAX_SIZE}</dal_nacos_api_max_size>
            </settings>

            <!-- globalConfig 会通过 global-config 接口送给前端页面 -->
            <globalConfig>
                <resultStructure>true</resultStructure>
                <responseFormat><![CDATA[
{
    "success"      : "@resultStatus",
    "message"      : "@resultMessage",
    "code"         : "@resultCode",
    "lifeCycleTime": "@timeLifeCycle",
    "executionTime": "@timeExecution",
    "value"        : "@resultData"
}
                ]]></responseFormat>
                <!-- 是否将所有请求参数打包到一个新的 参数中便于统一获取。 -->
                <wrapAllParameters>false</wrapAllParameters>
                <!-- 结合 wrapAllParameters 参数一起使用，当 wrapAllParameters 配置为 true 时候被封装的新参数名称 -->
                <wrapParameterName>root</wrapParameterName>
                <!-- 是否展示 Git 的按钮 -->
                <showGitButton>true</showGitButton>
                <!-- 是否检测版本，Dataway 会收集您一些信息。如关闭将不会接收到任何新版本提示信息。 -->
                <checkDatawayVersion>true</checkDatawayVersion>
            </globalConfig>
        </dataway>

        <autoLoadSpi>
            <spi>net.hasor.dataway.spi.AuthorizationChainSpi</spi>
            <spi>net.hasor.dataway.spi.CompilerSpiListener</spi>
            <spi>net.hasor.dataway.spi.PreExecuteChainSpi</spi>
            <spi>net.hasor.dataway.spi.ResultProcessChainSpi</spi>
            <spi>net.hasor.dataway.spi.SerializationChainSpi</spi>
        </autoLoadSpi>
    </hasor>
</config>